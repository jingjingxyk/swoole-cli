name: build-php-cli-linux-x86_64-latest-swoole

on:
  workflow_dispatch:
    branches:
      - b
    inputs:
      build_latest_swoole_or_swow:
        required: true
        description: "定制构建选项: 构建最新版的 swoole 或者 swow （此二者扩展不能同时启用）"
        default: '-swoole +swoole_latest'
        type: choice
        options:
          - '-swoole +swoole_latest'
          - '-swoole +swow_latest'
          - '-swoole +swow'
      build_type:
        required: true
        description: "定制构建选项: 指定构建类型"
        default: '--with-build-type=release'
        type: choice
        options:
          - '--with-build-type=release'
          - '--with-build-type=dev'
      build_options:
        required: false
        description: "定制构建选项: 请查看 docs/options.md"
        default: ' '
        type: string
env:
  BUILD_PHP_VERSION: 8.2.4

jobs:
  linux-x86_64:
    if: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare Source Code
        run: |
          lscpu
          echo $PATH
          env
          docker info
          id -u
          id -g
          who
          cat /etc/os-release
          hostnamectl
          uname -s
          uname -m
          uname -r

          # echo "BUILD_PHP_VERSION=8.2.4" >> "$GITHUB_ENV"

          export IPV6=$(ip -6 address show  | grep inet6 | awk '{print $2}' | cut -d'/' -f1 | sed -n '2p')
          export IPV4=$(ip -4 address show  | grep inet | grep -v 127.0.0 | awk '{print $2}' | cut -d'/' -f1 | sed -n '1p')
          echo $IPV4
          echo $IPV6
          echo "X_IPV6=${IPV6}" >> $GITHUB_ENV
          echo "X_IPV4=${IPV4}" >> $GITHUB_ENV

          # git submodule update --init

      - name: Prepare Libraries and Extensions
        uses: addnab/docker-run-action@v3
        with:
          #image: docker.io/jingjingxyk/build-swoole-cli:download-box-nginx-alpine-20230429T061856Z
          image: docker.io/jingjingxyk/build-swoole-cli:download-box-nginx-alpine-20230505T112517Z
          options: -v ${{ github.workspace }}:/work -w /work
          run: |
            set -x
            mkdir -p pool/lib
            mkdir -p pool/ext
            mkdir -p ext
            cp -rf /usr/share/nginx/html/extensions/* pool/ext
            cp -rf /usr/share/nginx/html/libraries/* pool/lib
      - name: Prepare
        uses: addnab/docker-run-action@v3
        with:
          image: docker.io/jingjingxyk/build-swoole-cli:all-dependencies-alpine-1.7.1-x86_64-20230611T164740Z
          # image: docker.io/jingjingxyk/build-swoole-cli:all-dependencies-alpine-swoole-cli-x86_64-20230505T120137Z
          # image: docker.io/phpswoole/swoole-cli-builder:all-dependencies-alpine-swoole-cli-x86_64-20230505T120137Z
          options: -v ${{ github.workspace }}:/work -w /work
          run: |
            set -eux
            # export PATH=/work/bin/runtime:$PATH  # 容器已经内置 php 和 composer 容器

            # composer update --no-dev  --optimize-autoloader
            composer update   --optimize-autoloader
            php prepare.php   --with-swoole-pgsql=1  +inotify +apcu +ds +xlswriter +ssh2 +pgsql +pdo_pgsql -mongodb -swoole ${{ inputs.build_latest_swoole_or_swow }} ${{ inputs.build_type }} ${{ inputs.build_options }}

            chmod a+x make.sh
            head -n 20 make.sh
            php ./vendor/bin/phpunit ./sapi/unit/MainTest.php  --list-tests
            php ./vendor/bin/phpunit ./sapi/unit/MainTest.php

      - name: Build
        uses: addnab/docker-run-action@v3
        with:
          image: docker.io/jingjingxyk/build-swoole-cli:all-dependencies-alpine-1.7.1-x86_64-20230611T164740Z
          options: -v ${{ github.workspace }}:/work -w /work
          run: |
            bash ./make.sh config
            bash ./make.sh build
            bash ./make.sh archive

      - name: Show Build Result
        run: |
          ./php-src/sapi/cli/php -v
          ./php-src/sapi/cli/php -m
          ./php-src/sapi/cli/php --ri swoole
          ./bin/php-${{ env.BUILD_PHP_VERSION }}/bin/php -v
          file ./bin/php-${{ env.BUILD_PHP_VERSION }}/bin/php
          readelf -h ./bin/php-${{ env.BUILD_PHP_VERSION }}/bin/php
          ./bin/php-${{ env.BUILD_PHP_VERSION }}/bin/php -r "echo PHP_VERSION;"
          # ./bin/php-${{ env.BUILD_PHP_VERSION }}/bin/php ./vendor/bin/phpunit ./sapi/unit/MainTest.php  --list-tests
          # ./bin/php-${{ env.BUILD_PHP_VERSION }}/bin/php ./vendor/bin/phpunit ./sapi/unit/MainTest.php


      - name: production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: php-cli-linux-x64-${{ env.BUILD_PHP_VERSION }}
          retention-days: 7
          path: ./bin/php-${{ env.BUILD_PHP_VERSION }}/bin/php

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            php-cli-v${{ env.BUILD_PHP_VERSION }}-linux-x64.tar.xz
