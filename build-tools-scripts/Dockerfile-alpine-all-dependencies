FROM alpine:edge

ENV TZ=Etc/UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN test -f /etc/apk/repositories.save || cp /etc/apk/repositories /etc/apk/repositories.save
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories

RUN apk update && apk upgrade
RUN apk add --no-cache alpine-sdk xz autoconf automake linux-headers clang-dev clang lld libtool  cmake  tini
RUN apk add --no-cache flex bison re2c pkgconf ca-certificates gnutls-dev

ENV CC=clang
ENV CXX=clang++
ENV LD=ld.lld
#RUN mv /usr/bin/ld /usr/bin/ld.old && ln -s /usr/bin/ld.lld /usr/bin/ld


RUN apk add --no-cache icu icu-dev icu-libs icu-data-full icu-static
RUN apk add --no-cache  ncurses-dev ncurses-libs ncurses-static
RUN apk add --no-cache  readline readline-dev readline-static
# RUN apk add --no-cache  c-ares c-ares-dev c-ares-utils

# meson 和ninja 构建
RUN apk add python3 python3-dev py3-pip ninja
RUN pip3 install meson  -i https://pypi.tuna.tsinghua.edu.cn/simple

COPY --from=docker.io/jingjingxyk/build-swoole-cli:build-dev-download-library-and-extension-alpine-edge-20230107T034754Z /swoole-cli/ /swoole-cli/
RUN cp -rf /swoole-cli/ /work
WORKDIR /work
RUN sh make.sh all-library


FROM alpine:edge

ENV TZ=Etc/UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN test -f /etc/apk/repositories.save || cp /etc/apk/repositories /etc/apk/repositories.save
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories

RUN apk update && apk upgrade
RUN apk add --no-cache alpine-sdk xz autoconf automake linux-headers clang-dev clang lld libtool  cmake  tini
RUN apk add --no-cache flex bison re2c pkgconf ca-certificates gnutls-dev

ENV CC=clang
ENV CXX=clang++
ENV LD=ld.lld
#RUN mv /usr/bin/ld /usr/bin/ld.old && ln -s /usr/bin/ld.lld /usr/bin/ld

WORKDIR /work



COPY --from=0 /usr/libiconv /usr/libiconv
COPY --from=0 /usr/openssl/ /usr/openssl/
COPY --from=0  /usr/brotli/ /usr/brotli/
COPY --from=0 /usr/libxml2/ /usr/libxml2/
COPY --from=0 /usr/libxslt/ /usr/libxslt/

COPY --from=0  /usr/gmp/ /usr/gmp/

COPY --from=0  /usr/zlib /usr/zlib
COPY --from=0  /usr/bzip2 /usr/bzip2
COPY --from=0  /usr/liblzma /usr/liblzma
COPY --from=0  /usr/libzstd /usr/libzstd

COPY --from=0  /usr/zip /usr/zip

COPY --from=0  /usr/giflib /usr/giflib
COPY --from=0  /usr/libpng /usr/libpng
COPY --from=0  /usr/libjpeg /usr/libjpeg
COPY --from=0  /usr/freetype /usr/freetype
COPY --from=0  /usr/libwebp /usr/libwebp

COPY --from=0  /usr/sqlite3/ /usr/sqlite3/
COPY --from=0  /usr/oniguruma/ /usr/oniguruma/

COPY --from=0  /usr/curl/ /usr/curl/

COPY --from=0  /usr/libsodium/ /usr/libsodium/
COPY --from=0  /usr/libyaml /usr/libyaml
COPY --from=0  /usr/mimalloc/ /usr/mimalloc/

COPY --from=0  /usr/imagemagick /usr/imagemagick

# COPY --from=0  /usr/ncurses /usr/ncurses
# COPY --from=0  /usr/readline /usr/readline

# COPY --from=0  /usr/cares/ /usr/cares/

# COPY --from=0  /usr/icu/ /usr/icu/
# COPY --from=0  /usr/ /usr/


RUN apk add --no-cache icu icu-dev icu-libs icu-data-full icu-static
RUN apk add --no-cache  ncurses-dev ncurses-libs ncurses-static
RUN apk add --no-cache  readline readline-dev readline-static
# RUN apk add --no-cache  c-ares c-ares-dev c-ares-utils

# meson 和ninja 构建
# RUN apk add --no-cache  python3  py3-pip ninja
# RUN pip3 install meson  -i https://pypi.tuna.tsinghua.edu.cn/simple


RUN cp -f /etc/apk/repositories.save /etc/apk/repositories

RUN rm -rf /var/cache/apk/* /tmp/* /var/tmp/*

